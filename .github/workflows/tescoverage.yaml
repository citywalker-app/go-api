name: Go Coverage

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  test:
    runs-on: ubuntu-22.04

    permissions:
      contents: write
      packages: write
      actions: write

    environment: production

    env:
      STAGE_STATUS: ${{vars.STAGE_STATUS}}
      SERVER_HOST: ${{secrets.SERVER_HOST}}
      SERVER_PORT: ${{secrets.SERVER_PORT}}
      SERVER_READ_TIMEOUT: ${{secrets.SERVER_READ_TIMEOUT}}
      PREFORK: ${{secrets.PREFORK}}
      DATABASE: ${{secrets.DATABASE}}
      DB_HOST: ${{secrets.DB_HOST}}
      DB_PORT: ${{secrets.DB_PORT}}
      MDB_DATABASE: ${{secrets.MDB_DATABASE}}
      MDB_USERNAME: ${{secrets.MDB_USERNAME}}
      MDB_PASSWORD: ${{secrets.MDB_PASSWORD}}
      MDB_COLLECTION_USERS: ${{secrets.MDB_COLLECTION_USERS}}
      MDB_COLLECTION_CITIES: ${{secrets.MDB_COLLECTION_CITIES}}
      MDB_COLLECTION_TRAVELS: ${{secrets.MDB_COLLECTION_TRAVELS}}
      JWT_SECRET_KEY: ${{secrets.JWT_SECRET_KEY}}
      JWT_EXPIRE_HOUR_COUNT: ${{secrets.JWT_EXPIRE_HOUR_COUNT}}
      SMTP_SERVER: ${{secrets.SMTP_SERVER}}
      SMTP_PORT: ${{secrets.SMTP_PORT}}
      SMTP_USERNAME: ${{secrets.SMTP_USERNAME}}
      SMTP_PASSWORD: ${{secrets.SMTP_PASSWORD}}
      REDIS_ADDR: ${{secrets.REDIS_ADDR}}
      REDIS_PASSWORD: ${{secrets.REDIS_PASSWORD}}
      REDIS_DB: ${{secrets.REDIS_DB}}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.22 # Change this to your Go version

      - name: Install dependencies
        run: go mod download

      - name: Set up Docker Compose
        run: |
          docker-compose --version

      - name: Build and run Docker Compose
        run: |
          docker-compose up -f docker-compose.yml up --build -d
          docker ps

      - name: Run tests with coverage
        run: |
          go clean -testcache
          go test ./... -coverprofile=coverage.out
          go tool cover -func=coverage.out | grep total | awk '{print $3}' > coverage.txt

      - name: Create coverage badge
        run: |
          COVERAGE=$(cat coverage.txt | sed 's/%//')
          curl -o badge.svg "https://img.shields.io/badge/testCoverage-${COVERAGE}%25-brightgreen"
          mv badge.svg ./badges/test-coverage.svg

      - name: Commit and push changes
        uses: EndBug/add-and-commit@v9
        with:
          message: "style(badge): update coverage badge"
          add: "./badges/test-coverage.svg"

      - name: Tear down Docker Compose
        if: always()
        run: |
          docker-compose -f docker-compose.yml down
